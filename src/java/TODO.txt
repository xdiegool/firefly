Implement auto restrict functionality
	- Might be done by creating interface to collect registering calls to pass to a
	method  openAutoRestrict
Implement unrestrict
	- Add method in Channel that unrestricts it
Create method restrict in channel and let it call the appropriate method in Connection
	- Currently, you need to call a method in Connection, passing a channel to it.
	 A cleaner way to do this would be to cal a method in Channel which then passes
	 itself to the method in Connection, possibly doing something before and after,
	 e.g. state change. 
More comments
Write unit tests
	- JUnit tests for all non threading classes
	- Tests for thread-related, as far as possible 
	- Tests for interaction between classes
Create manual (preferably automatic) test for java to c version compatibility
	- I.e. starting up pong or ping c in and the corresponding in java
Implement TCP support
	- Finish the already started TCP implementation. Might have to change
	overall program structure, or provide ResendQueue stub, since this is
	not needed with TCP.
Integrate with client-server solution for camera
	- Use firefly java in the camera application and cross-compile it
	with J2C.

POSSIBLY:
Connection state?
	- If needed create state variables for connection as well, i.e. checking
	if the connection is closed when calling open channel or something.

